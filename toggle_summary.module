<?php

/**
 * Implements hook_field_formatter_info().
 */

function toggle_summary_field_formatter_info(){
  return array(
    'toggle_summary' => array(
      'label' => t('Summary/Trimmed Toggle'),
      'field types' => array('text_with_summary'),
      'settings' => array(
        'trim_length' => 600,
        'nav_style' => 'tab'
      ),
    )
  );
}

/**
 * Implements hook_field_formatter_settings_form().
 */
function toggle_summary_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];

  $element = array();

  if($display['type'] == 'toggle_summary') {
    $element['trim_length'] = array(
      '#title' => t('Trim length'),
      '#type' => 'textfield',
      '#size' => 10,
      '#default_value' => $settings['trim_length'],
      '#element_validate' => array('element_validate_integer_positive'),
      '#required' => TRUE,
    );
    $element['nav_style'] = array(
      '#title' => t('Bootstrap Nav Style'),
      '#type' => 'select',
      '#options' => array(
        'tab' => t('Tabs'),
        'pill' => t('Pills')
      ),
      '#default_value' => $settings['nav_style'],
      '#required' => TRUE,
    );
  }

  return $element;
}

/**
 * Implements hook_field_formatter_settings_summary().
 */

function toggle_summary_field_formatter_settings_summary($field, $instance, $view_mode) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];

  $summary = array();

  if($display['type'] == 'toggle_summary') {
    $summary[] = t('Trim length') . ': ' . $settings['trim_length'];
    $summary[] = t('Nav Style')  . ': ' . $settings['nav_style'];
  }

  return $summary;
}


/**
 * Implements hook_field_formmater_view().
 */
function toggle_summary_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display){
  $element = array();
  $settings = $display['settings'];

  if($display['type'] == 'toggle_summary') {
    foreach ($items as $delta => $item) {
      $full_body = _text_sanitize($instance, $langcode, $item, 'value');
      if (!empty($item['summary'])) {
        $summary_or_trimmed = _text_sanitize($instance, $langcode, $item, 'summary');
      }
      else {
        $summary_or_trimmed = $full_body;
        $summary_or_trimmed = text_summary($summary_or_trimmed, $instance['settings']['text_processing'] ? $item['format'] : NULL, $display['settings']['trim_length']);
      }

      $element[$delta] = array(
        '#theme' => 'summary_toggle',
        '#summary_or_trimmed' => $summary_or_trimmed,
        '#full_body' => $full_body,
        '#nav_style' => $settings['nav_style'],
        '#field' => $instance
      );

    }
  }

  return $element;
}
/**
 * Implements hook_theme()
 */
function toggle_summary_theme($existing, $type, $theme, $path){
  return array(
    'summary_toggle' => array(
      'template' => 'summary_toggle',
      'variables' => array(
        'summary_or_trimmed' => '',
        'full_body' => '',
        'nav_style' => 'tab',
        'field' => array()
      )
    )
  );
}


function template_preprocess_summary_toggle(&$vars) {
  $hooks = array( 'summary_toggle__'.$vars['field']['entity_type']);
  $hooks[] = $hooks[0] . '__' . $vars['field']['field_name'];
  $vars['theme_hook_suggestions'] = $hooks;
}
